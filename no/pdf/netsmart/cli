// Copyright (c) 2014 Netsmart Technologies, Inc. 

function printReport(preview) {

    if (preview == null) preview = false;

    with (document)
    {
        var bar = "tool_bar";
        var rpt = "report_details";
        var sTitle = title;


        //Hide Title
        title = "";

        //Hide buttons
        //		all(bar).style.visibility='hidden';

        //Hide scrollbars
        body.style.overflowX = "hidden";
        body.style.overflowY = "hidden";
        all(rpt).style.media = "print";
        all(rpt).style.overflowX = "hidden";
        all(rpt).style.overflowY = "hidden";

        //		print();
        if (preview) {
            //factory.printing.Preview();
        }
        else {
            //factory.printing.Print(true);
            window.print();
        }

        //Restore visibility
        title = sTitle;

        //		all(bar).style.visibility='visible';

        body.style.overflowX = "auto";
        body.style.overflowY = "auto";
        all(rpt).style.overflowX = "auto";
        all(rpt).style.overflowY = "auto";

    }
}
//START: FB - ECS-51933 - Save as PDF Support. 5/25/2022

/**
 * Pops up Save PDF Modal
 */
function ShowPDFDialog() {
    $("#actions-modal-id").modal();
}

/**
 * Saves HTML as PDF and opens PDF.
 */
function SavePDF() {

    // KO ECS-53582 02/27/2023 Close PDF modal before saving
    $("#actions-modal-id").modal("hide");

    //get all the style sheets and replace their src with full urls.
    var fullURL = window.location.href
    var baseURL = fullURL.substring(0, fullURL.indexOf("rpt_processor"));
    var reportArea = $("#report_area").clone(true);
    $(reportArea).find('.hidden-print').remove()
    $.each($("link[rel='stylesheet']"), function () {
        var link = $(this).clone();
        $(link).attr("href", baseURL + $(link).attr("href"));
        $(reportArea).prepend(link);
    });
    //PRAJAPATI ECS-60417 adding images src absolutely path to export images on PDF
    if ($('#report_area img[src*="images/"]').length) {
        $.each(reportArea.find('img[src*="images/"]'), function (k,v) {
            if (v.src != '' && v.src !== undefined)
                $(v).attr("src", v.src)
        });
    }
    var html = reportArea[0].outerHTML;
    $.ajax({
        type: "POST",
        cache: false,
        async: false,
        url: "webservices/FormUtilService.svc/SaveAsPDF",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        data: JSON.stringify({
            html: html,
            options: {
                SuppressPageNumber: !$("#include-page-numbers").prop("checked"),
                PrintLandscape: $("#landscape").prop("checked")
            }
        }),

        success: function (data) {
            window.open("SaveAsDialog.aspx?file_name=" + data, "_blank");
        },

        error: function (jqXHR, textStatus, errorThrown) {
            alert("PrintPreview exception => " + errorThrown);
        }
    });
}

//END: FB - ECS-51933 - 5/25/2022

function reportTrim(strValue) {
    strValue = VBTrim(strValue);
    if (strValue == "") strValue = '&nbsp;';
    return strValue;
}

//*********************************************************************************
function reportFormatDate(strValue) {
    strValue = VBTrim(strValue);
    if (strValue == "") {
        strValue = '&nbsp;';
    }
    else {
        // BK 9/5/2008 Ver 5.4 Dev# 4353 - added .replace(/ 11:59:59 PM/g,'');
        strValue = strValue.replace(/ 12:00am/g, '').replace(/ 11:59pm/g, '').replace(/ 11:59:59 PM/g, '');
    }

    return strValue;
}

//*********************************************************************************
function reportFormatCurrency(strValue) {
    strValue = VBFormatCurrency(strValue);
    if (strValue == "") strValue = '&nbsp;';
    return strValue;
}

// replacement for legacy formfunctions.launchFormSet
/**
 * Replacement for legacy formfunctions.launchFormSet
 * @param {object} obj
 * @param {object} oWindow
 * @param {string} formSetID Formset Id
 * @param {string} keyValue Parent Value
 * @param {string} applySecurity Apply Security?
 * @param {string} modulesID Modules Id
 */
function launchFormSet(obj, oWindow, formSetID, keyValue, applySecurity, modulesID) {

    // JDEWALT ECS-25205 11/08/17 - Remove curly braces
    var url = "formset.aspx?";
    url += ((modulesID != null) ? ("&m=" + modulesID.replace(/[{}]/g, '')) : "");
    url += ((formSetID != null) ? ("&fs=" + formSetID.replace(/[{}]/g, '')) : "");
    url += ((keyValue != null) ? ("&pv=" + keyValue.replace(/[{}]/g, '')) : "");
    url += ((applySecurity != null) ? ("&apply_security=" + applySecurity) : "");
    url += ("&ip=true"); //JDEWALT ECS-25205 11/08/17 - Including inherit_parent paramter to populate launched formset
    url += ("&isAspPopUp=true"); // JDEWALT ECS-25205 11/09/17 - Add flag to know this is a pop up window since classic asp cannot open a rad window
    url += "&no_cashe=" + Math.random().toString();

    // // JDEWALT ECS-25205 11/09/17 - Open Form Set in new window
    PopupCenter(url, '');
}
//ZV ECS-26762 Finance reports in NX
// replacement for legacy formFunctions.launchForm. 
function launchForm(columnName, formCode, keyValue, formMode, fieldParms, formWidth, formHeight, editAllowed, closeForm) {
    var url = "Form.aspx?";
    url += ("&form_code=" + formCode);
    url += ("&key_value=" + keyValue);
    if (!formWidth) {
        formWidth = 800;
    }
    if (!formHeight) {
        formHeight = 500;
    }
    window.open(url, '', "height=" + formHeight + ",width=" + formWidth + ",resizable=1,scrollbars=1");
}

// replacement for legacy reports_client_functions.viewServiceForm
function viewServiceForm(
    keyValue,
    eventID,
    formHeader,
    eventCategory,
    currentPeopleID,
    formProgram,
    serviceTrack
)
{
    // JDEWALT ECS-25205 11/08/17 - Remove curly braces    
    //ECS-32456 SWebster 1/24/2019 account for diff naming for service plan form in CS and XB
    var url = "Form.aspx?";
    if (formProgram == "service_plan_form.aspx") {
        url = "ServicePlanForm.aspx?";
    }
    url += ((formHeader != null) ? ("&form_header_id=" + formHeader.replace(/[{}]/g, '')) : "");
    url += ((keyValue != null) ? ("&key_value=" + keyValue.replace(/[{}]/g, '')) : "");
    url += ((eventID != null) ? ("&event_id=" + eventID.replace(/[{}]/g, '')) : "");
    url += ((eventCategory != null) ? ("&event_category=" + eventCategory.replace(/[{}]/g, '')) : "");
    url += ((currentPeopleID != null) ? ("&parent_value=" + currentPeopleID.replace(/[{}]/g, '')) : ""); //ECS-32456 SWebster 2/6/2019 
    url += ((serviceTrack != null) ? ("&service_track=" + serviceTrack.replace(/[{}]/g, '')) : "");
    url += ("&mode=VIEW");

    // JDEWALT ECS-25205 11/10/17 - Open service in new window
    PopupCenter(url, '');
}


// BF ECS-43813 12/15/2020 Added function to clean xml strings so special characters work properly
/**
 * Function to clean strings so special characters can work properly in XML
 * @param {string} str xml string that is being cleaned
 */
function cleanXml(str) {
    str = str.replace("&", "&amp;");
    str = str.replace("<", "&lt;");
    str = str.replace(">", "&gt;");
    str = str.replace("\"", "&quot;");
    str = str.replace("'", "&apos;");
    return str;
}


// BF ECS-43813 11/10/2020 Enabling PrintLinkReport function to work with Aggregate Enrollment report in NX
// RNO 7/19/2017 ECS-16685 - replacement for legacy reports_client_functions.PrintLinkReport
// original function commented above. changes 1/30/2015:
// reportSQL is now reportCode
// additional sql parameters and parms XML no longer used. Base report must have xml data island with FORM_XML.
// need agency_id, agency_name, and is_multiagency. 
// RNO 1/29/2016 ECS-11637 - added worker_id to parameter listing
/**
 * Generic function for print link reports
 * @param {string} reportFunction report function being run
 * @param {string} reportCode report code
 * @param {string} agency_id agency ID
 * @param {string} agency_name name of agency
 * @param {string} worker_id worker ID
 * @param {string} is_multiagency is multiagency or not
 * @param {string} rptParamShow report params to show
 * @param {string} reportTitle title of report
 * @param {string} rptSelectCaption report selection caption
 * @param {string} from_date start date/period of report
 * @param {string} to_date end date/period of report
 * @param {string} year year
 * @param {string} month month
 * @param {string} from_year start year
 * @param {string} from_month start month
 * @param {string} to_year end year
 * @param {string} to_month end month
 * @param {string} as_of_month as of month
 * @param {string} as_of_year as of year
 * @param {string} for_month for month
 * @param {string} for_year for year
 * @param {string} landscape landscape
 */
function PrintLinkReport(reportFunction, reportCode,
    agency_id, agency_name, worker_id, is_multiagency,
    rptParamShow, reportTitle, rptSelectCaption,
    from_date, to_date,
    year, month,
    from_year, from_month,
    to_year, to_month,
    as_of_month, as_of_year,
    for_month, for_year,
    landscape) {

    // BF ECS-43813 12/14/2020 Loop through params except for 'reportFunction' to escape any special characters
    for (var i = 1; i < arguments.length; i++) {
        arguments[i] = cleanXml(arguments[i]);
    }

    // BF ECS-43813 11/13/2020 adding reportInfo to send to rpt_processor_custom - removed old "window" setup
    var infoDataSet = GetReportInfoByCode(reportCode);
    var reportInfo = infoDataSet[0];

    // add parameter data into reportInfo array
    $.each(reportInfo, function (i) {
        if (reportInfo[i].Key == "reportFunction") {
            reportInfo[i].Value = reportFunction;
        }
        else if (reportInfo[i].Key == "report_selection_caption") {
            reportInfo[i].Value = rptSelectCaption;
        }
        else if (reportInfo[i].Key == "reportTitle") {
            reportInfo[i].Value = reportTitle;
        }
        else if (reportInfo[i].Key == "report_parms2show") {
            reportInfo[i].Value = rptParamShow.replace(/~/g, ',');
        }
    });
    reportInfo.push({ Key: "from_date", Value: from_date });
    reportInfo.push({ Key: "thru_date", Value: to_date });

    infoDataSet = JSON.stringify([reportInfo]);
    // end ECS-43813

    // create the form to submit
    var urlString = "rpt_processor_custom.asp?function=" + reportFunction;
    var strFormXml = document.getElementById('report_parms').innerHTML;  // ECS-50471 RM 2/6/22 - Correctly get the report parameters

    //ECS-46415 - FB - Remove connection string exposure 8/31/2021
    // BF ECS-43813 11/13/2020 adding conn string and sql query to be sent over to rpt_custom_processor
    // set up connection string
    //var connectionString = Util.getConnectionString();

    // set up sqlQuery and strFormXml (report_parms) strings
    // ECS-50471 RM 2/6/22 - Correctly get the report parameters
    var sqlQuery = "rpt_aggregates_enrollments '" + strFormXml;

    // set up report form to submit
    var reportForm = document.createElement("form");
    reportForm.method = "post";
    reportForm.action = urlString;
    reportForm.name = "reportForm";
    // BF ECS-43813 12/09/2020 Changing target to include a random value, allowing multiple reports to open at the same time
    var target = "ReportWindow" + Math.random();
    reportForm.target = target;

    var inReportInfo = document.createElement("input");
    inReportInfo.setAttribute("name", "reportInfo");
    inReportInfo.setAttribute("value", infoDataSet);
    reportForm.appendChild(inReportInfo);


    //ECS-46415 - FB - Remove connection string exposure 8/31/2021


    var inSQLQuery = document.createElement("input");
    inSQLQuery.setAttribute("name", "sqlQuery");
    inSQLQuery.setAttribute("value", sqlQuery);
    reportForm.appendChild(inSQLQuery);
    // end ECS-43813

    var inReportCode = document.createElement("input");
    inReportCode.setAttribute("name", "report_code");
    inReportCode.setAttribute("value", reportCode);
    reportForm.appendChild(inReportCode);

    // RNO 1/28/2016 ECS-11637 - added section to process xml in rpt_processor_custom.asp
    var inCaller = document.createElement("input");
    inCaller.setAttribute("name", "caller");
    inCaller.setAttribute("value", "PrintLinkReport");
    reportForm.appendChild(inCaller);
    // end ECS-11637

    // RNO 1/29/2016 ECS-11637 - added section to process xml in rpt_processor_custom.asp
    var inWorkerID = document.createElement("input");
    inWorkerID.setAttribute("name", "worker_id");
    inWorkerID.setAttribute("value", worker_id);
    reportForm.appendChild(inWorkerID);
    // end ECS-11637

    // NF 11/16/2015 ECS-10354 - changed element id from FORM_XML to report_parms, name attribute name from form_xml to report_parms
    //Aggregates report is crashing due to security fixes from ECS-8876, form_xml is passed in as report_parms
    // rpt_processor_custom will build report params from form_xml   
    var inFormXML = document.createElement("input");
    inFormXML.setAttribute("name", "report_parms"); //changed attribute name from form_xml to report_parms
    inFormXML.setAttribute("value", strFormXml);
    reportForm.appendChild(inFormXML);

    var inSelectionCaption = document.createElement("input");
    inSelectionCaption.setAttribute("name", "report_selection_caption");
    inSelectionCaption.setAttribute("value", rptSelectCaption);
    reportForm.appendChild(inSelectionCaption);

    var inTitle = document.createElement("input");
    inTitle.setAttribute("name", "report_title");
    inTitle.setAttribute("value", reportTitle);
    reportForm.appendChild(inTitle);

    var inP2Show = document.createElement("input");
    inP2Show.setAttribute("name", "report_parms2show");
    inP2Show.setAttribute("value", rptParamShow.replace(/~/g, ','));
    reportForm.appendChild(inP2Show);

    var inFromDate = document.createElement("input");
    inFromDate.setAttribute("name", "report_from_date");
    inFromDate.setAttribute("value", from_date);
    reportForm.appendChild(inFromDate);

    var inToDate = document.createElement("input");
    inToDate.setAttribute("name", "report_thru_date");
    inToDate.setAttribute("value", to_date);
    reportForm.appendChild(inToDate);

    var inAsOfDate = document.createElement("input");
    inAsOfDate.setAttribute("name", "report_as_date");
    if (Util.isNullOrEmpty(to_date)) { // BF ECS-43813 12/07/2020 Now using Util.isNullOrEmpty function
        inAsOfDate.setAttribute("value", from_date);
    } else {
        inAsOfDate.setAttribute("value", '');
    }
    reportForm.appendChild(inAsOfDate);

    var inYear = document.createElement("input");
    inYear.setAttribute("name", "report_year");
    inYear.setAttribute("value", year);
    reportForm.appendChild(inYear);

    var inMonth = document.createElement("input");
    inMonth.setAttribute("name", "report_month");
    inMonth.setAttribute("value", month);
    reportForm.appendChild(inMonth);

    var inFromYear = document.createElement("input");
    inFromYear.setAttribute("name", "rpt_from_year");
    inFromYear.setAttribute("value", from_year);
    reportForm.appendChild(inFromYear);

    var inFromMonth = document.createElement("input");
    inFromMonth.setAttribute("name", "rpt_from_month");
    inFromMonth.setAttribute("value", from_month);
    reportForm.appendChild(inFromMonth);

    var inToYear = document.createElement("input");
    inToYear.setAttribute("name", "rpt_to_year");
    inToYear.setAttribute("value", to_year);
    reportForm.appendChild(inToYear);

    var inToMonth = document.createElement("input");
    inToMonth.setAttribute("name", "rpt_to_month");
    inToMonth.setAttribute("value", to_month);
    reportForm.appendChild(inToMonth);

    var inAsOfMonth = document.createElement("input");
    inAsOfMonth.setAttribute("name", "rpt_as_of_month");
    inAsOfMonth.setAttribute("value", as_of_month);
    reportForm.appendChild(inAsOfMonth);

    var inAsOfYear = document.createElement("input");
    inAsOfYear.setAttribute("name", "rpt_as_of_year");
    inAsOfYear.setAttribute("value", as_of_year);
    reportForm.appendChild(inAsOfYear);

    var inForMonth = document.createElement("input");
    inForMonth.setAttribute("name", "rpt_for_month");
    inForMonth.setAttribute("value", for_month);
    reportForm.appendChild(inForMonth);

    var inForYear = document.createElement("input");
    inForYear.setAttribute("name", "rpt_for_year");
    inForYear.setAttribute("value", for_year);
    reportForm.appendChild(inForYear);

    var inLandscape = document.createElement("input");
    inLandscape.setAttribute("name", "report_landscape");
    inLandscape.setAttribute("value", landscape);
    reportForm.appendChild(inLandscape);

    var inAgencyID = document.createElement("input");
    inAgencyID.setAttribute("name", "agency_id");
    inAgencyID.setAttribute("value", agency_id);
    reportForm.appendChild(inAgencyID);

    var inAgencyName = document.createElement("input");
    inAgencyName.setAttribute("name", "agency_name");
    inAgencyName.setAttribute("value", agency_name);
    reportForm.appendChild(inAgencyName);

    var inIsMultiagency = document.createElement("input");
    inIsMultiagency.setAttribute("name", "is_multiagency");
    inIsMultiagency.setAttribute("value", is_multiagency);
    reportForm.appendChild(inIsMultiagency);

    // submit form to show report
    document.body.appendChild(reportForm);

    // BF ECS-43813 11/13/2020 Report submission changed to fit NX report standards
    try {
        window.open('', target); // BF ECS-43813 12/09/2020 Changing target to match reportForm value
        reportForm.submit();
    }
    catch (e) {
        alert("An error occurred while launching the report:\r\r" + e.toString());
    }
    //remove document body.
    finally {
        document.body.removeChild(reportForm);
    }
    // end ECS-43813
}

//JDEWALT ECS-25205 11/10/17
/**
 * Centers a pop up window using window.open and also accounts for dual monitors
 * @param {string} url - Url for the window being launched
 * @param {string} title - Title for the window being launched
 */
function PopupCenter(url, title) {


    // Make sure height is defined
    var myHeight = 400;
    try {
        // Find the size of the browser window
        myHeight = $(window.top).height() * .8; // returns height of browser viewport
    }
    catch (e) { // Other way to get dimensions of screen
        myHeight = screen.availheight * .8;
    }

    // Make sure width is defined
    var myWidth = 600;
    try {
        // Find the size of the browser window
        myWidth = $(window.top).width() * .9; // returns width of browser viewport
    }
    catch (e) { // Other way to get dimensions of screen
        myWidth = screen.availwidth * .9;
    }


    // Fixes dual-screen position on most browsers
    var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
    var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;

    var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
    var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

    var left = ((width / 2) - (myWidth / 2)) + dualScreenLeft;
    var top = ((height / 2) - (myHeight / 2)) + dualScreenTop;
    var newWindow = window.open(url, title, 'scrollbars=yes, resizable=yes, width=' + myWidth + ', height=' + myHeight + ', top=' + top + ', left=' + left);

    // JDEWALT ECS-25205 12/12/17 - Send the window to default.aspx to close on timeout or log out
    window.opener.parent.parent.windowsOpened.push(newWindow);

    // Puts focus on the newWindow
    if (window.focus) {
        newWindow.focus();
    }
}

//JB ECS-32899 2/22/2019 add gl account summary drilldown to nx (currently not showing as of or selection criteria in popup report)
function PrintDetailsAR(reportFunction, reportCode, reportTitle, rptSelectCaption
    , acct_id, account_description, agency_id, worker_id, month_value
    , as_of_year, cost_center_id, chart_of_accounts_id, receiver
    , payor_id, people_id, program_unit_id, procedure_code, billing_payment_plan_id) {

    var info = FinanceReports.GetReportInfo(reportCode);
    var jsonInfo = JSON.parse(info);

    $.each(jsonInfo[0], function(ind) {
        if (jsonInfo[0][ind].Key == "reportFunction") {
            jsonInfo[0][ind].Value = reportFunction;
        }
    });

    //Create form to submit to rpt_processor_custom
    var form = document.createElement("form");

    var sqlQuery = "rpt_account_balances '";

    sqlQuery += '<parameter_set>';
    sqlQuery += '<parameter name="ARACCT" value="' + acct_id + '"/>';
    sqlQuery += '<parameter name="AGENCYID" value="' + agency_id + '"/>';
    sqlQuery += '<parameter name="WORKERID" value="' + worker_id + '"/>';
    sqlQuery += '<parameter show="true" name="as_of_month" value="' + month_value + '"/>';
    sqlQuery += '<parameter show="true" name="as_of_year" value="' + as_of_year + '"/>';
    sqlQuery += '</parameter_set>\'';

    var urlString = 'rpt_processor_custom.asp?function=' + reportFunction +
        '&report_title=' + reportTitle +
        '&report_selection_caption=' + rptSelectCaption;

    FinanceReports.LaunchReport(sqlQuery, urlString, worker_id, JSON.stringify(jsonInfo))

}

// BF ECS-43141 11/02/2020 Get report info by report code
/**
 * Queries report info based off report code + report selection
 * @param {String} reportCode Report code
 * @param {String} reportSelectionId Report selection, if any
 * @returns {Object} JSON object of report info
 */
function GetReportInfoByCode(reportCode, reportSelectionId) {
    var rptInfo = null;

    $.ajax({
        method: "POST",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        async: false,
        url: "webservices/Reports/ReportService.svc/getReportInfoByCode",
        data: JSON.stringify({
            reportCode: reportCode,
            strReportSelection: reportSelectionId
        }),
        success: function (data, textStatus, jqXHR) {
            if (typeof data == "string") {
                rptInfo = JSON.parse(data);
            }
            else {
                rptInfo = data;
            }
        },

        error: function (jqXHR, textStatus, errorThrown) {
            alert("Reports.GetReportInfo =>" + errorThrown);
        }
    });

    return rptInfo;
};

// BF ECS-43141 11/02/2020 Converted function from classic to work with NX reporting. Prints details client listing.
/**
 * Prints details client listing report selections from the Aggregates Agency report hyperlinks
 * @param {string} reportFunction report function being run
 * @param {string} reportCode report code
 * @param {string} reportTitle report title
 * @param {string} rptSelectCaption report selection caption
 * @param {string} agency_id agency ID
 * @param {string} worker_id worker ID
 * @param {string} from_date start date/period of report
 * @param {string} to_date end date/period of report
 */
function PrintAggAgency(reportFunction, reportCode, reportTitle, rptSelectCaption,
    agency_id, worker_id, from_date, to_date) {

    // BF ECS-43141 12/14/2020 Loop through params except for 'reportFunction' to escape any special characters
    for (var i = 1; i < arguments.length; i++) {
        arguments[i] = cleanXml(arguments[i]);
    }

    var infoDataSet = GetReportInfoByCode(reportCode);
    var reportInfo = infoDataSet[0];

    // add parameter data into reportInfo array
    $.each(reportInfo, function (i) {
        if (reportInfo[i].Key == "reportFunction") {
            reportInfo[i].Value = reportFunction;
        }
        else if (reportInfo[i].Key == "report_selection_caption") {
            reportInfo[i].Value = rptSelectCaption;
        }
    });
    reportInfo.push({ Key: "from_date", Value: from_date });
    reportInfo.push({ Key: "thru_date", Value: to_date });

    infoDataSet = JSON.stringify([reportInfo]);

    // create the form to submit
    var urlString = 'rpt_processor_custom.asp?function=' + reportFunction +
        '&report_title=' + reportTitle +
        '&report_selection_caption=' + rptSelectCaption;



    // set up sql query string
    var sqlQuery = "rpt_aggregates_agency '";
    sqlQuery += '<parameter_set>';
    sqlQuery += '<parameter name="AGENCYID" value="' + agency_id + '"></parameter>';
    sqlQuery += '<parameter name="WORKERID" value="' + worker_id + '"></parameter>';
    sqlQuery += '<parameter show="true" name="from_date" value="' + from_date + '"></parameter>';
    sqlQuery += '<parameter show="true" name="thru_date" value="' + to_date + '"></parameter>';
    sqlQuery += '<parameter type_code="FK" show="true" name="" scrnval_id="" is_not_in="" value="" descript=""></parameter>';
    sqlQuery += '</parameter_set>';
    sqlQuery += "'";

    // set up report form to submit
    var reportForm = document.createElement("form");
    reportForm.method = "post";
    reportForm.action = urlString;
    reportForm.name = "reportForm";
    // BF ECS-43813 12/09/2020 Changing target to include a random value, allowing multiple reports to open at the same time
    var target = "ReportWindow" + Math.random();
    reportForm.target = target;

    var inReportInfo = document.createElement("input");
    inReportInfo.setAttribute("name", "reportInfo");
    inReportInfo.setAttribute("value", infoDataSet);
    reportForm.appendChild(inReportInfo);

    //ECS-46415 - FB - Remove connection string exposure 8/31/2021

    var inSQLQuery = document.createElement("input");
    inSQLQuery.setAttribute("name", "sqlQuery");
    inSQLQuery.setAttribute("value", sqlQuery);
    reportForm.appendChild(inSQLQuery);

    var inReportCode = document.createElement("input");
    inReportCode.setAttribute("name", "report_code");
    inReportCode.setAttribute("value", reportCode);
    reportForm.appendChild(inReportCode);

    var inCaller = document.createElement("input");
    inCaller.setAttribute("name", "caller");
    inCaller.setAttribute("value", "PrintAggAgency");
    reportForm.appendChild(inCaller);

    var inAgencyID = document.createElement("input");
    inAgencyID.setAttribute("name", "agency_id");
    inAgencyID.setAttribute("value", agency_id);
    reportForm.appendChild(inAgencyID);

    var inWorkerID = document.createElement("input");
    inWorkerID.setAttribute("name", "worker_id");
    inWorkerID.setAttribute("value", worker_id);
    reportForm.appendChild(inWorkerID);

    var inFromDt = document.createElement("input");
    inFromDt.setAttribute("name", "from_date");
    inFromDt.setAttribute("value", from_date);
    reportForm.appendChild(inFromDt);

    var inToDt = document.createElement("input");
    inToDt.setAttribute("name", "to_date");
    inToDt.setAttribute("value", to_date);
    reportForm.appendChild(inToDt);

    // submit form to show report
    document.body.appendChild(reportForm);

    try {
        window.open('', target); // BF ECS-43813 12/09/2020 Changing target to match reportForm value
        reportForm.submit();
    }
    catch (e) {
        alert("An error occurred while launching the report:\r\r" + e.toString());
    }
    //remove document body.
    finally {
        document.body.removeChild(reportForm);
    }
}

// BF ECS-43815 11/05/2020 Converted function from classic to work with NX reporting. Prints total people served by program.
/**
 * Prints total people served by program from the Aggregates People report hyperlinks
 * @param {string} reportFunction report Function being run
 * @param {string} reportCode report code
 * @param {string} reportTitle report title
 * @param {string} rptSelectCaption report selection caption
 * @param {string} agency_id agency ID
 * @param {string} worker_id worker ID
 * @param {string} from_date start date/period of report
 * @param {string} to_date end date/period of report
 * @param {string} program_name program name
 * @param {string} program_info_id program info ID
 * @param {string} program_unit_id program unit ID
 * @param {string} program_unit program unit
 * @param {string} has_prg_unit_par should function use the program unit param or not
 * @param {string} manag_office_id managing office ID
 * @param {string} manag_name managing office name
 * @param {string} has_manag_par should function use the managing office param or not
 */
function PrintDetailsAGR(reportFunction, reportCode, reportTitle, rptSelectCaption,
    agency_id, worker_id, from_date, to_date, program_name, program_info_id,
    program_unit_id, program_unit, has_prg_unit_par,
    manag_office_id, manag_name, has_manag_par) {

    // BF ECS-43815 12/14/2020 Loop through params except for 'reportFunction' to escape any special characters
    for (var i = 1; i < arguments.length; i++) {
        arguments[i] = cleanXml(arguments[i]);
    }

    var infoDataSet = GetReportInfoByCode(reportCode);
    var reportInfo = infoDataSet[0];

    // decide what goes into report_parms2show reportInfo value
    var parms2show = 'Program - ' + program_name.replace(/&/g, ' and ');
    if (has_prg_unit_par != "0") {
        parms2show = parms2show + ', Program Unit - ' + program_unit.replace(/&/g, ' and ')
    }

    if (has_manag_par != "0") {
        parms2show = parms2show + ', Managing Office - ' + manag_name.replace(/&/g, ' and ')
    }

    // add parameter data into reportInfo array
    $.each(reportInfo, function (i) {
        if (reportInfo[i].Key == "reportFunction") {
            reportInfo[i].Value = reportFunction;
        }
        else if (reportInfo[i].Key == "report_selection_caption") {
            reportInfo[i].Value = rptSelectCaption;
        }
        else if (reportInfo[i].Key == "reportTitle") {
            reportInfo[i].Value = reportTitle;
        }
        else if (reportInfo[i].Key == "report_parms2show") {
            reportInfo[i].Value = parms2show;
        }
    });
    reportInfo.push({ Key: "from_date", Value: from_date });
    reportInfo.push({ Key: "thru_date", Value: to_date });

    infoDataSet = JSON.stringify([reportInfo]);

    // create the form to submit
    var urlString = 'rpt_processor_custom.asp?function=' + reportFunction +
        '&report_title=' + reportTitle +
        '&report_selection_caption=' + rptSelectCaption;


    // set up sql query string
    var sqlQuery = "rpt_aggregates_people '";
    sqlQuery += '<parameter_set>';
    sqlQuery += '<parameter name="Program" value="' + program_info_id + '"></parameter>';
    sqlQuery += '<parameter name="Program Unit" value="' + program_unit_id + '"></parameter>';
    sqlQuery += '<parameter name="Managing Office" value="' + manag_office_id + '"></parameter>';
    sqlQuery += '<parameter name="AGENCYID" value="' + agency_id + '"></parameter>';
    sqlQuery += '<parameter name="WORKERID" value="' + worker_id + '"></parameter>';
    sqlQuery += '<parameter show="true" name="from_date" value="' + from_date + '"></parameter>';
    sqlQuery += '<parameter show="true" name="thru_date" value="' + to_date + '"></parameter>';
    sqlQuery += '</parameter_set>';
    sqlQuery += "'";

    var reportForm = document.createElement("form");
    reportForm.method = "post";
    reportForm.action = urlString;
    reportForm.name = "reportForm";
    // BF ECS-43813 12/09/2020 Changing target to include a random value, allowing multiple reports to open at the same time
    var target = "ReportWindow" + Math.random();
    reportForm.target = target;

    var inReportInfo = document.createElement("input");
    inReportInfo.setAttribute("name", "reportInfo");
    inReportInfo.setAttribute("value", infoDataSet);
    reportForm.appendChild(inReportInfo);

    //ECS-46415 - FB - Remove connection string exposure 8/31/2021


    var inSQLQuery = document.createElement("input");
    inSQLQuery.setAttribute("name", "sqlQuery");
    inSQLQuery.setAttribute("value", sqlQuery);
    reportForm.appendChild(inSQLQuery);

    var inReportCode = document.createElement("input");
    inReportCode.setAttribute("name", "report_code");
    inReportCode.setAttribute("value", reportCode);
    reportForm.appendChild(inReportCode);

    var inCaller = document.createElement("input");
    inCaller.setAttribute("name", "caller");
    inCaller.setAttribute("value", "PrintDetailsAGR");
    reportForm.appendChild(inCaller);

    var inProgram = document.createElement("input");
    inProgram.setAttribute("name", "program_info_id");
    inProgram.setAttribute("value", program_info_id);
    reportForm.appendChild(inProgram);

    var inProgramUnit = document.createElement("input");
    inProgramUnit.setAttribute("name", "program_unit_id");
    inProgramUnit.setAttribute("value", program_unit_id);
    reportForm.appendChild(inProgramUnit);

    var inMO = document.createElement("input");
    inMO.setAttribute("name", "manag_office_id");
    inMO.setAttribute("value", manag_office_id);
    reportForm.appendChild(inMO);

    var inFromDate = document.createElement("input");
    inFromDate.setAttribute("name", "from_date");
    inFromDate.setAttribute("value", from_date);
    reportForm.appendChild(inFromDate);

    var inToDate = document.createElement("input");
    inToDate.setAttribute("name", "to_date");
    inToDate.setAttribute("value", to_date);
    reportForm.appendChild(inToDate);

    var inReportParmsShow = document.createElement("input");
    inReportParmsShow.setAttribute("name", "report_parms2show");
    inReportParmsShow.setAttribute("value", parms2show);
    reportForm.appendChild(inReportParmsShow);

    nHeight = window.screen.availHeight * .8;
    nWidth = window.screen.availWidth * .8;

    nTop = (window.screen.availHeight - nHeight) / 3;
    nLeft = (window.screen.availWidth - nWidth) / 3;

    // submit form to show report
    document.body.appendChild(reportForm);

    try {
        window.open('', target); // BF ECS-43813 12/09/2020 Changing target to match reportForm value
        reportForm.submit();
    }
    catch (e) {
        alert("An error occurred while launching the report:\r\r" + e.toString());
    }
    //remove document body.
    finally {
        document.body.removeChild(reportForm);
    }
}

//ZV ECS-39059 2/20/2020 Adding function for classic reports that would open window with URL.
/**
 * Opens a window with given URL.
 * @param {String} URL  The URL to open
 */
function launchHTMLWindow(URL) {

    if (window.event != null) window.event.cancelBubble = true;
    var nHeight = window.screen.availHeight * .7;
    var nWidth = window.screen.availWidth * .7;
    var joinChar = (URL.indexOf('?') > 0) ? '&' : '?';

    sOptions = "height=" + nHeight + "," +
        "width=" + nWidth + "," +
        "top=25, left=25, " +
        "location=no, menubar=no, resizable=yes, " +
        "status=no, titlebar=no, toolbar=no";

    oWin = window.open(URL + joinChar + "no_cashe=" + Math.random(), 'owin', sOptions);

}

//ZV ECS-51979 5/20/2022 port from classic

/**
* Opens a form
* @param {string} formProgram form URL
* @param {string} formCode form code
* @param {string} tableUpdated table name
* @param {string} keyValue form key value
* @param {string} openMode open in mode
* @param {boolean} isAddAllowed is add allowed?
* @param {boolean} isEditAllowed edit allowed?
* @param {boolean} isDeleteAllowed delete allowed?
* @param {boolean} isEv2do is task?
* @param {string} eventID event definition ID
* @param {string} parentValue parent value
* @param {string} serviceTrack service track
* @param {string} belongs2Event belongs to for form
* @param {string} programService program providing service
* @param {string} programEnr program enrollment
* @param {boolean} modalDialog open in modal?
*/
function RptOpenFormGeneric(
    formProgram,
    formCode,
    tableUpdated,
    keyValue,
    openMode,
    isAddAllowed,
    isEditAllowed,
    isDeleteAllowed,
    isEv2do,
    eventID,
    parentValue,
    serviceTrack,
    belongs2Event,
    programService,
    programEnr,
    modalDialog) {

    var sID = getDataValue(tableUpdated, tableUpdated + "_id", keyValue, tableUpdated + "_id");
    if (sID != null) {
        OpenFormGeneric(
            formProgram,
            formCode,
            keyValue,
            openMode,
            isAddAllowed,
            isEditAllowed,
            isDeleteAllowed,
            isEv2do,
            eventID,
            parentValue,
            serviceTrack,
            belongs2Event,
            programService,
            programEnr,
            modalDialog);
    }
    else {
        alert('The record was deleted');
    }



}